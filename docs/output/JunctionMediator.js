Ext.data.JsonP.JunctionMediator({"singleton":false,"statics":{"cfg":[],"property":[],"css_var":[],"event":[],"css_mixin":[],"method":[]},"files":[{"filename":"JunctionMediator.js","href":"JunctionMediator.html#JunctionMediator"}],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/JunctionMediator.html#JunctionMediator' target='_blank'>JunctionMediator.js</a></div></pre><div class='doc-contents'><p>JunctionMediator</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-handleNotification' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JunctionMediator'>JunctionMediator</span><br/><a href='source/JunctionMediator.html#JunctionMediator-method-handleNotification' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JunctionMediator-method-handleNotification' class='name expandable'>handleNotification</a>( <span class='pre'>Object notification</span> )</div><div class='description'><div class='short'>Handle Notification. ...</div><div class='long'><p>Handle Notification.</p>\n\n<P>\nThis provides the handling for common junction activities. It\naccepts input and output pipes in response to <code>PipeAware</code>\ninterface calls.</P>\n\n\n<P>\nOverride in subclass, and call <code>super.handleNotification</code>\nif none of the subclass-specific notification names are matched.</P>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>notification</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-listNotificationInterests' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='JunctionMediator'>JunctionMediator</span><br/><a href='source/JunctionMediator.html#JunctionMediator-method-listNotificationInterests' target='_blank' class='view-source'>view source</a></div><a href='#!/api/JunctionMediator-method-listNotificationInterests' class='name expandable'>listNotificationInterests</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>List Notification Interests. ...</div><div class='long'><p>List Notification Interests.</p>\n\n<P>\nReturns the notification interests for this base class.\nOverride in subclass and call <code>super.listNotificationInterests</code>\nto get this list, then add any sublcass interests to\nthe array before returning.</P>\n\n</div></div></div></div></div></div></div>","component":false,"uses":[],"code_type":"function","inheritdoc":null,"superclasses":[],"mixedInto":[],"mixins":[],"members":{"property":[],"cfg":[],"css_var":[],"css_mixin":[],"event":[],"method":[{"owner":"JunctionMediator","meta":{},"name":"handleNotification","id":"method-handleNotification","tagname":"method"},{"owner":"JunctionMediator","meta":{},"name":"listNotificationInterests","id":"method-listNotificationInterests","tagname":"method"}]},"allMixins":[],"meta":{},"private":false,"name":"JunctionMediator","alternateClassNames":[],"aliases":{},"html_meta":{},"tagname":"class","extends":null,"requires":[],"id":"class-JunctionMediator","subclasses":[],"inheritable":false});