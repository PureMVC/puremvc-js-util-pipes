Ext.data.JsonP.org_puremvc_js_multicore_utilities_pipes_PipeAware({"singleton":false,"statics":{"cfg":[],"property":[],"css_var":[],"event":[],"css_mixin":[],"method":[]},"files":[{"filename":"Junction.js","href":"Junction.html#org-puremvc-js-multicore-utilities-pipes-PipeAware"}],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Junction.html#org-puremvc-js-multicore-utilities-pipes-PipeAware' target='_blank'>Junction.js</a></div></pre><div class='doc-contents'><p>Pipe Aware interface.</p>\n\n<P>\nCan be implemented by any PureMVC Core that wishes\nto communicate with other Cores using the Pipes\nutility.</P>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addPipeListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.puremvc.js.multicore.utilities.pipes.PipeAware'>org.puremvc.js.multicore.utilities.pipes.PipeAware</span><br/><a href='source/Junction.html#org-puremvc-js-multicore-utilities-pipes-PipeAware-method-addPipeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.utilities.pipes.PipeAware-method-addPipeListener' class='name expandable'>addPipeListener</a>( <span class='pre'>Object name, Object context, Object listener</span> )</div><div class='description'><div class='short'>Add a PipeListener to an INPUT pipe. ...</div><div class='long'><p>Add a PipeListener to an INPUT pipe.</p>\n\n<P>\nNOTE: there can only be one PipeListener per pipe,\nand the listener function must accept an IPipeMessage\nas its sole argument.</P>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'><p>the INPUT pipe to add a PipeListener to</p>\n</div></li><li><span class='pre'>context</span> : Object<div class='sub-desc'><p>the calling context or 'this' object</p>\n</div></li><li><span class='pre'>listener</span> : Object<div class='sub-desc'><p>the function on the context to call</p>\n</div></li></ul></div></div></div><div id='method-hasInputPipe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.puremvc.js.multicore.utilities.pipes.PipeAware'>org.puremvc.js.multicore.utilities.pipes.PipeAware</span><br/><a href='source/Junction.html#org-puremvc-js-multicore-utilities-pipes-PipeAware-method-hasInputPipe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.utilities.pipes.PipeAware-method-hasInputPipe' class='name expandable'>hasInputPipe</a>( <span class='pre'>Object name</span> )</div><div class='description'><div class='short'>Does this junction have an INPUT pipe by this name? ...</div><div class='long'><p>Does this junction have an INPUT pipe by this name?</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'><p>the pipe to check for</p>\n</div></li></ul></div></div></div><div id='method-hasOutputPipe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.puremvc.js.multicore.utilities.pipes.PipeAware'>org.puremvc.js.multicore.utilities.pipes.PipeAware</span><br/><a href='source/Junction.html#org-puremvc-js-multicore-utilities-pipes-PipeAware-method-hasOutputPipe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.utilities.pipes.PipeAware-method-hasOutputPipe' class='name expandable'>hasOutputPipe</a>( <span class='pre'>Object name</span> )</div><div class='description'><div class='short'>Does this junction have an OUTPUT pipe by this name? ...</div><div class='long'><p>Does this junction have an OUTPUT pipe by this name?</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'><p>the pipe to check for</p>\n</div></li></ul></div></div></div><div id='method-hasPipe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.puremvc.js.multicore.utilities.pipes.PipeAware'>org.puremvc.js.multicore.utilities.pipes.PipeAware</span><br/><a href='source/Junction.html#org-puremvc-js-multicore-utilities-pipes-PipeAware-method-hasPipe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.utilities.pipes.PipeAware-method-hasPipe' class='name expandable'>hasPipe</a>( <span class='pre'>Object name</span> )</div><div class='description'><div class='short'>Does this junction have a pipe by this name? ...</div><div class='long'><p>Does this junction have a pipe by this name?</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'><p>the pipe to check for</p>\n</div></li></ul></div></div></div><div id='method-registerPipe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.puremvc.js.multicore.utilities.pipes.PipeAware'>org.puremvc.js.multicore.utilities.pipes.PipeAware</span><br/><a href='source/Junction.html#org-puremvc-js-multicore-utilities-pipes-PipeAware-method-registerPipe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.utilities.pipes.PipeAware-method-registerPipe' class='name expandable'>registerPipe</a>( <span class='pre'>Object name, Object type, Object pipe</span> )</div><div class='description'><div class='short'>Register a pipe with the junction. ...</div><div class='long'><p>Register a pipe with the junction.</p>\n\n<P>\nPipes are registered by unique name and type,\nwhich must be either <code>Junction.INPUT</code>\nor <code>Junction.OUTPUT</code>.</P>\n\n\n<P>\nNOTE: You cannot have an INPUT pipe and an OUTPUT\npipe registered with the same name. All pipe names\nmust be unique regardless of type.</P>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>type</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>pipe</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-removePipe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.puremvc.js.multicore.utilities.pipes.PipeAware'>org.puremvc.js.multicore.utilities.pipes.PipeAware</span><br/><a href='source/Junction.html#org-puremvc-js-multicore-utilities-pipes-PipeAware-method-removePipe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.utilities.pipes.PipeAware-method-removePipe' class='name expandable'>removePipe</a>( <span class='pre'>Object name</span> )</div><div class='description'><div class='short'>Remove the pipe with this name if it is registered. ...</div><div class='long'><p>Remove the pipe with this name if it is registered.</p>\n\n<P>\nNOTE: You cannot have an INPUT pipe and an OUTPUT\npipe registered with the same name. All pipe names\nmust be unique regardless of type.</P>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'><p>the pipe to remove</p>\n</div></li></ul></div></div></div><div id='method-retrievePipe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.puremvc.js.multicore.utilities.pipes.PipeAware'>org.puremvc.js.multicore.utilities.pipes.PipeAware</span><br/><a href='source/Junction.html#org-puremvc-js-multicore-utilities-pipes-PipeAware-method-retrievePipe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.utilities.pipes.PipeAware-method-retrievePipe' class='name expandable'>retrievePipe</a>( <span class='pre'>Object name</span> )</div><div class='description'><div class='short'>Retrieve the named pipe. ...</div><div class='long'><p>Retrieve the named pipe.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'><p>the pipe to retrieve</p>\n</div></li></ul></div></div></div><div id='method-sendMessage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.puremvc.js.multicore.utilities.pipes.PipeAware'>org.puremvc.js.multicore.utilities.pipes.PipeAware</span><br/><a href='source/Junction.html#org-puremvc-js-multicore-utilities-pipes-PipeAware-method-sendMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.puremvc.js.multicore.utilities.pipes.PipeAware-method-sendMessage' class='name expandable'>sendMessage</a>( <span class='pre'>Object name, Object message</span> )</div><div class='description'><div class='short'>Send a message on an OUTPUT pipe. ...</div><div class='long'><p>Send a message on an OUTPUT pipe.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'><p>the OUTPUT pipe to send the message on</p>\n</div></li><li><span class='pre'>message</span> : Object<div class='sub-desc'><p>the IPipeMessage to send</p>\n</div></li></ul></div></div></div></div></div></div></div>","component":false,"uses":[],"code_type":"function","inheritdoc":null,"superclasses":[],"mixedInto":[],"mixins":[],"members":{"property":[],"cfg":[],"css_var":[],"css_mixin":[],"event":[],"method":[{"owner":"org.puremvc.js.multicore.utilities.pipes.PipeAware","meta":{},"name":"addPipeListener","id":"method-addPipeListener","tagname":"method"},{"owner":"org.puremvc.js.multicore.utilities.pipes.PipeAware","meta":{},"name":"hasInputPipe","id":"method-hasInputPipe","tagname":"method"},{"owner":"org.puremvc.js.multicore.utilities.pipes.PipeAware","meta":{},"name":"hasOutputPipe","id":"method-hasOutputPipe","tagname":"method"},{"owner":"org.puremvc.js.multicore.utilities.pipes.PipeAware","meta":{},"name":"hasPipe","id":"method-hasPipe","tagname":"method"},{"owner":"org.puremvc.js.multicore.utilities.pipes.PipeAware","meta":{},"name":"registerPipe","id":"method-registerPipe","tagname":"method"},{"owner":"org.puremvc.js.multicore.utilities.pipes.PipeAware","meta":{},"name":"removePipe","id":"method-removePipe","tagname":"method"},{"owner":"org.puremvc.js.multicore.utilities.pipes.PipeAware","meta":{},"name":"retrievePipe","id":"method-retrievePipe","tagname":"method"},{"owner":"org.puremvc.js.multicore.utilities.pipes.PipeAware","meta":{},"name":"sendMessage","id":"method-sendMessage","tagname":"method"}]},"allMixins":[],"meta":{},"private":false,"name":"org.puremvc.js.multicore.utilities.pipes.PipeAware","alternateClassNames":[],"aliases":{},"html_meta":{},"tagname":"class","extends":null,"requires":[],"id":"class-org.puremvc.js.multicore.utilities.pipes.PipeAware","subclasses":[],"inheritable":false});